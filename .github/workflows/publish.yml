name: Publish

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  get_related_branches:
    name: Get related branches for the tag
    runs-on: ubuntu-20.04
    outputs:
      branch: ${{ steps.get_related_branches.outputs.branch }}
    steps:
      - name: checkout source code
        uses: actions/checkout@v4
      - name: Get related branches
        id: get_related_branches
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch="$(echo ${raw//origin\//} | tr -d '\n')"
          echo "{name}=branch" >> $GITHUB_OUTPUT
          echo "Branches where this tag exists : $branch."

  check-branch:
    name: Check on main branch
    needs: get_related_branches
    runs-on: ubuntu-20.04
    steps:
      - name: Exit if not on main branch
        if: contains(${{ needs.get_related_branches.outputs.branch }}, 'main')
        run: exit -1

  publish-npm-binaries:
    name: Publish NPM packages
    needs: check-branch
    runs-on: ${{ matrix.build.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - {
            NAME: linux-x64-glibc,
            OS: ubuntu-20.04,
            TARGET: x86_64-unknown-linux-gnu,
          }
          - {
            NAME: linux-arm64-glibc,
            OS: ubuntu-20.04,
            TARGET: aarch64-unknown-linux-gnu,
          }
          - {
            NAME: win32-x64-msvc,
            OS: windows-2022,
            TARGET: x86_64-pc-windows-msvc,
          }
          - {
            NAME: win32-arm64-msvc,
            OS: windows-2022,
            TARGET: aarch64-pc-windows-msvc,
          }
          - {
            NAME: darwin-x64,
            OS: macos-11,
            TARGET: x86_64-apple-darwin,
          }
          - {
            NAME: darwin-arm64,
            OS: macos-11,
            TARGET: aarch64-apple-darwin,
          }
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set the release version
        shell: bash
        run: |
          export RELEASE_VERSION=${GITHUB_REF:11}
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.build.TOOLCHAIN }}
          target: ${{ matrix.build.TARGET }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target ${{ matrix.build.TARGET }}
          use-cross: ${{ matrix.build.OS == 'ubuntu-20.04' }} # use `cross` for Linux builds

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Publish to NPM
        shell: bash
        run: sh ./package.sh --publish
        env:
          BUILD_NAME: ${{ matrix.build.NAME }}
          BUILD_OS: ${{ matrix.build.OS }}
          BUILD_TARGET: ${{ matrix.build.TARGET }}
          BUILD_VERSION: ${{ env.RELEASE_VERSION }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-npm-base:
    name: Publish the base NPM package
    needs: publish-npm-binaries
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
      - name: Publish the package
        shell: bash
        run: |
          cd npm/robespierre
          npm i
          npm run build
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
