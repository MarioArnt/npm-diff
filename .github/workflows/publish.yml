name: Publish

on:
  push:
    branches:
      - main

jobs:
  need_publish:
    runs-on: ubuntu-latest
    outputs:
      is_bumped: ${{ steps.npm_check.outputs.bump }}
      npm_target_version: ${{ steps.npm_check.outputs.target_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
      - id: npm_check
        shell: bash
        run: |
          manifest=$(jq -r '.version' ./npm/robespierre/package.json)
          npm=$(npm view robespierre --json | jq -r '.version')
          [[ "$manifest" == "$npm" ]] && echo "bump=false" >> "$GITHUB_OUTPUT" || echo "bump=true" >> "$GITHUB_OUTPUT"
          echo "target_version=$(jq -r '.version' ./npm/robespierre/package.json)" >> "$GITHUB_OUTPUT"

  publish-npm-binaries:
    name: Publish NPM packages
    needs: need_publish
    if: needs.need_publish.outputs.is_bumped == 'true'
    runs-on: ${{ matrix.build.os }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - {
            NAME: linux-x64-glibc,
            OS: ubuntu-20.04,
            TARGET: x86_64-unknown-linux-gnu,
            TOOLCHAIN: stable,
          }
          - {
            NAME: linux-arm64-glibc,
            OS: ubuntu-20.04,
            TARGET: aarch64-unknown-linux-gnu,
            TOOLCHAIN: stable,
          }
          - {
            NAME: win32-x64-msvc,
            OS: windows-2022,
            TARGET: x86_64-pc-windows-msvc,
            TOOLCHAIN: stable,
          }
          - {
            NAME: win32-arm64-msvc,
            OS: windows-2022,
            TARGET: aarch64-pc-windows-msvc,
            TOOLCHAIN: nightly,
          }
          - {
            NAME: darwin-x64,
            OS: macos-11,
            TARGET: x86_64-apple-darwin,
            TOOLCHAIN: stable,
          }
          - {
            NAME: darwin-arm64,
            OS: macos-11,
            TARGET: aarch64-apple-darwin,
            TOOLCHAIN: stable,
          }
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
      - name: Check if already published
        id: npm_check_bin
        shell: bash
        env:
          TARGET_VERSION: ${{needs.need_publish.outputs.npm_target_version}}
          BUILD_OS: ${{ matrix.build.OS }}
          BUILD_NAME: ${{ matrix.build.NAME }}
        run: |
          bin="robespierre"
          node_os=$(echo "${BUILD_NAME}" | cut -d '-' -f1)
          export node_os
          node_arch=$(echo "${BUILD_NAME}" | cut -d '-' -f2)
          export node_arch
          if [ "${BUILD_OS}" = "windows-2022" ]; then
            export node_pkg="${bin}-windows-${node_arch}"
          else
            export node_pkg="${bin}-${node_os}-${node_arch}"
          fi
          echo $current
          echo $TARGET_VERSION
          current=$(npm view ${node_pkg} --json | jq -r '.version')
          [[ "$current" == "$TARGET_VERSION" ]] && echo "bump=false" >> "$GITHUB_OUTPUT" || echo "bump=true" >> "$GITHUB_OUTPUT"
      - name: Install Rust toolchain
        if: steps.npm_check_bin.outputs.bump == 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.build.TOOLCHAIN }}
          target: ${{ matrix.build.TARGET }}
          override: true
      - name: Test
        if: steps.npm_check_bin.outputs.bump == 'true'
        run: |
          cargo check
          cargo test --all
      - name: Build
        if: steps.npm_check_bin.outputs.bump == 'true'
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target ${{ matrix.build.TARGET }}
          use-cross: ${{ matrix.build.OS == 'ubuntu-20.04' }} # use `cross` for Linux builds
      - name: Publish to NPM
        if: steps.npm_check_bin.outputs.bump == 'true'
        shell: bash
        run: sh ./package.sh --publish
        env:
          BUILD_NAME: ${{ matrix.build.NAME }}
          BUILD_OS: ${{ matrix.build.OS }}
          BUILD_TARGET: ${{ matrix.build.TARGET }}
          BUILD_VERSION: ${{needs.need_publish.outputs.npm_target_version}}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-npm-base:
    name: Publish the base NPM package
    needs: publish-npm-binaries
    if: needs.need_publish.outputs.is_bumped == 'true'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
      - name: Publish the package
        shell: bash
        run: |
          cp README.md npm/robespierre
          cd npm/robespierre
          npm i
          npm run build
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#      - uses: rickstaa/action-create-tag@v1
#        id: "tag_create"
#        with:
#          tag: ${{needs.need_publish.outputs.npm_target_version}}
